%pure-parser
%locations
%defines
%define parse.lac full
%error-verbose
%parse-param {void *v}
%lex-param {void *scanner}

%{

#define YYDEBUG 1

#include <stdio.h>
#include <string.h>
#include <math.h>

#include <tranalisi.hpp>

#include <MOM2/pars.hpp>
#include <MOM2/parser.hpp>
#include <MOM2/scan.hpp>

using namespace scan;

  const int debug_parser=0;
  
  int tokenizer_lex(YYSTYPE *lvalp,YYLTYPE *llocp,void *scanner);
#define parser_lex tokenizer_lex

  void parser_error(YYLTYPE *locp,void *v,const char *err)
  {
      CRASH("exception at line %d columns [%d-%d] %s",locp->first_line,locp->first_column,locp->last_column,err);
  }

  %}

 //union used to catch all symbols
%union
{
    std::string *text;
    double      real;
    int         inte;
}

%token TK_INVALID_STRING
%token TK_INVALID_CHAR

%token <text> TK_QUOTED_TEXT
%token <real> TK_REAL
%token <inte> TK_INTE

%token TK_ACTION
%token TK_ENSEMBLES
%token TK_PRINT_EACH_MOM
%token TK_USE_QED

%token TK_AVERAGE_R
%token TK_AVERAGE_EQUIV_MOMENTA
%token TK_CREATE_FROM_SCRATCH
%token TK_EVOLVE
%token TK_PLOT_Z
%token TK_SUBTRACT_OA2
%token TK_VAL_CHIR_EXTRAP

%%

commands:
        | commands read_ensembles '}'
        | commands TK_ACTION '=' TK_QUOTED_TEXT {pars::act=gaz::decrypt(*$4);}
        | commands TK_PRINT_EACH_MOM '=' TK_INTE {pars::print_each_mom=$4;}
        | commands TK_USE_QED '=' TK_INTE {pars::use_QED=$4;}
        /* | commands TK_QUOTED_TEXT '=' TK_AVERAGE_R '(' TK_QUOTED_TEXT ')' {drv->ing[*$2]=drv->ing[*$6].average_r(true);drv->suff+="_rave";} */
        /* | commands TK_QUOTED_TEXT '=' TK_AVERAGE_EQUIV_MOMENTA '(' TK_QUOTED_TEXT ')' {drv->ing[*$2]=drv->ing[*$6].average_equiv_momenta(true);drv->suff+="_ave";} */
        /* | commands TK_PLOT_Z '(' TK_QUOTED_TEXT ')' {drv->ing[*$4].plot_Z(drv->suff);} */
        /* | commands TK_QUOTED_TEXT '=' TK_VAL_CHIR_EXTRAP '(' TK_QUOTED_TEXT ')' {drv->ing[*$2]=drv->ing[*$6].chir_extrap();drv->suff+="_chir";} */
           | commands TK_QUOTED_TEXT '=' TK_CREATE_FROM_SCRATCH '(' ')' {create_all(*$2);delete $2;}
        /* | commands TK_QUOTED_TEXT '=' TK_SUBTRACT_OA2 '(' TK_QUOTED_TEXT ')' {drv->ing[*$6].subtract_Oa2(true);drv->suff+="_sub";} */
        /* | commands TK_QUOTED_TEXT '=' TK_EVOLVE '(' TK_QUOTED_TEXT ')' {drv->ing[*$6].evolve();drv->suff+="_evo";} */
;

read_ensembles: TK_ENSEMBLES '=' '{'
              | read_ensembles ',' ensemble
;

ensemble: TK_QUOTED_TEXT {pars::ens.push_back(*$1);}
;
